name: Release

on:
  push:
    branches:
      - release
  create:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag:
        description: "New tag name, or skip for default"
        required: false

env:
  EVENT_NUMBER: ${{ github.event.number }}
  COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
  MIN_TESTCOV: 80
  # A unique number for each workflow run within a repository.
  # This number does not change if you re-run the workflow run.
  RUN_ID: ${{ github.run_id }}
  # A unique number for each run of a particular workflow in a repository.
  # This number begins at 1 for the workflow's first run, and increments with each new run.
  # This number does not change if you re-run the workflow run.
  RUN_NUMBER: ${{ github.run_number }}
  # A unique number for each attempt of a particular workflow run in a repository.
  # This number begins at 1 for the workflow run's first attempt, and increments with each re-run.
  RUN_ATTEMPT: ${{ github.run_attempt }}
  PULL_NUMBER: ${{ github.event.pull_request.number }}

jobs:
  Publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Fetch History
        run: git fetch --prune --unshallow

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod

      - name: Prepare
        run: make vars tools

      - name: Build
        run: make build

      - name: Get Version
        id: version
        run: |
          if [ -z "${{ github.event.inputs.tag }}" ]; then
            echo "No tag provided, using default"         
            VERSION=$(cat .VERSION).$(git rev-list --count HEAD)
            echo "VERSION: ${VERSION}"
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2.4.0
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: "Release ${{ steps.version.outputs.version }}"
          files: bin/custom-linters-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
